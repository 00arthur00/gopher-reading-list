{
    "gopherReadingList": [{"title":"Why should you learn Go?","url":"https://medium.com/@kevalpatel2106/why-should-you-learn-go-f607681fad65"},{"title":"How to Write Go Code","url":"https://golang.org/doc/code.html"},{"title":"A Tour of Go","url":"https://tour.golang.org/welcome/1"},{"title":"Frequently Asked Questions","url":"https://golang.org/doc/faq"},{"title":"Go Koans","url":"https://github.com/cdarwin/go-koans"},{"title":"Go by Example","url":"https://gobyexample.com/"},{"title":"Go Bootcamp","url":"http://www.golangbootcamp.com/book/"},{"title":"Slice Tricks","url":"https://github.com/golang/go/wiki/SliceTricks"},{"title":"6 Tips for Using Strings in Go","url":"https://www.calhoun.io/6-tips-for-using-strings-in-go/"},{"title":"Understand Go pointers in less than 800 words or your money back | Dave Cheney","url":"https://dave.cheney.net/2017/04/26/understand-go-pointers-in-less-than-800-words-or-your-money-back"},{"title":"Golang channels tutorial | Alexander Guz's blog","url":"http://guzalexander.com/2013/12/06/golang-channels-tutorial.html"},{"title":"(Now You're) Thinking With Channels","url":"http://blog.mergermarket.it/now-youre-thinking-with-channels/"},{"title":"Channel Axioms | Dave Cheney","url":"https://dave.cheney.net/2014/03/19/channel-axioms"},{"title":"Go Defer Simplified with Practical Visuals","url":"https://blog.learngoprogramming.com/golang-defer-simplified-77d3b2b817ff"},{"title":"Understanding Go panic output","url":"https://joeshaw.org/understanding-go-panic-output/"},{"title":"How to avoid Go gotchas · divan's blog","url":"https://divan.github.io/posts/avoid_gotchas/"},{"title":"Common Gotchas in Go","url":"https://deadbeef.me/2018/01/go-gotchas"},{"title":"50 Shades of Go: Traps, Gotchas, and Common Mistakes for New Golang Devs","url":"http://devs.cloudimmunity.com/gotchas-and-common-mistakes-in-go-golang/"},{"title":"Unofficial Go FAQ","url":"http://www.tapirgames.com/blog/golang-unofficial-faq"},{"title":"Effective Go","url":"https://golang.org/doc/effective_go.html"},{"title":"Visualizing Concurrency in Go","url":"https://divan.github.io/posts/go_concurrency_visualize/"},{"title":"Strings, bytes, runes and characters in Go - The Go Blog","url":"https://blog.golang.org/strings"},{"title":"Arrays, slices (and strings): The mechanics of 'append' - The Go Blog","url":"https://blog.golang.org/slices"},{"title":"Code Review Comments","url":"https://github.com/golang/go/wiki/CodeReviewComments"},{"title":"command center: Less is exponentially more","url":"https://commandcenter.blogspot.com.br/2012/06/less-is-exponentially-more.html"},{"title":"Go Proverbs","url":"https://go-proverbs.github.io/"},{"title":"Idiomatic Go","url":"https://dmitri.shuralyov.com/idiomatic-go"},{"title":"Errors","url":"https://github.com/golang/go/wiki/Errors"},{"title":"When Should I Use One Liner if...else Statements in Go?","url":"https://www.calhoun.io/one-liner-if-statements-with-errors/"},{"title":"Go's Error Handling is Elegant","url":"https://davidnix.io/post/error-handling-in-go/"},{"title":"Effective error handling in Go. - Morsing's blog","url":"https://morsmachine.dk/error-handling"},{"title":"Alternative Patterns for Method Overloading in Go","url":"https://mymemorysucks.wordpress.com/2017/05/16/alternative-patterns-for-method-overloading-in-go/"},{"title":"Five Suggestions for Setting up a Go project","url":"https://dave.cheney.net/2014/12/01/five-suggestions-for-setting-up-a-go-project"},{"title":"Structuring Tests in Go","url":"https://medium.com/@benbjohnson/structuring-tests-in-go-46ddee7a25c"},{"title":"Organizing Go Code","url":"https://blog.golang.org/organizing-go-code"},{"title":"The anatomy of a Go project - darian.af","url":"http://darian.af/post/the-anatomy-of-a-golang-project/"},{"title":"Structuring Applications in Go","url":"https://medium.com/@benbjohnson/structuring-applications-in-go-3b04be4ff091"},{"title":"Style guideline for Go packages · Go, the unwritten parts","url":"https://rakyll.org/style-packages/"},{"title":"time in go","url":"https://bl.ocks.org/joyrexus/a56717634a672dcdfd48"},{"title":"The empty struct","url":"https://dave.cheney.net/2014/03/25/the-empty-struct"},{"title":"For Range Semantics - GoingGo - Ardan Labs","url":"https://www.ardanlabs.com/blog/2017/06/for-range-semantics.html"},{"title":"How I Learned To Quit Worrying And Love Go's Interfaces","url":"https://paddy.io/posts/go-interfaces/"},{"title":"How to use interfaces in Go","url":"http://jordanorelli.com/post/32665860244/how-to-use-interfaces-in-go"},{"title":"Creating My First Web Application with Go","url":"http://rosalita.github.io/building-a-web-app-with-go/"},{"title":"Making a RESTful JSON API in Go - The New Stack","url":"https://thenewstack.io/make-a-restful-json-api-go/"},{"title":"How to Serve Static Files with Golang","url":"https://neoteric.eu/how-to-serve-static-files-with-golang"},{"title":"An Intro To Templates in Go - Contextual Encoding","url":"https://www.calhoun.io/an-intro-to-templates-in-go-part-1-of-3/"},{"title":"Elliot Chance - Working With JSON in Go","url":"https://elliot.land/post/working-with-json-in-go"},{"title":"Making concurrent HTTP requests in Go programming language - Jinchuriki","url":"https://blog.narenarya.in/concurrent-http-in-go.html"},{"title":"Golang http handlers as middleware - @capotej","url":"http://capotej.com/blog/2013/10/07/golang-http-handlers-as-middleware/"},{"title":"A TCP Echo Server in Go (Golang) | Jim Lawless' Blog","url":"https://lawlessguy.wordpress.com/2015/12/23/a-tcp-echo-server-in-go-golang/"},{"title":"HTTP File Upload and Download with Go - zupzup","url":"https://zupzup.org/go-http-file-upload-download/"},{"title":"Simple Golang HTTP Request Context Example · Paul Fortin","url":"https://gocodecloud.com/blog/2016/11/15/simple-golang-http-request-context-example/"},{"title":"Go and JSON - Eager Blog","url":"https://eager.io/blog/go-and-json/"},{"title":"Writing HTTP Middleware in Go","url":"https://justinas.org/writing-http-middleware-in-go/"},{"title":"Learn Web Programming in Go by Examples","url":"https://gowebexamples.com/"},{"title":"Data races in Go(Golang) and how to fix them ","url":"https://www.sohamkamani.com/blog/2018/02/18/golang-data-race-and-how-to-fix-it/"},{"title":"Multithreading in Go - A Tutorial","url":"https://pragmacoders.com/multithreading-go-tutorial/"},{"title":"Go best practices, six years in","url":"https://peter.bourgon.org/go-best-practices-2016/"},{"title":"Aspects of a good Go library – Jack Lindamood – Medium","url":"https://medium.com/@cep21/aspects-of-a-good-go-library-7082beabb403"},{"title":"Solid Go Design","url":"https://dave.cheney.net/2016/08/20/solid-go-design"},{"title":"Go Object Oriented Design","url":"https://nathany.com/good/"},{"title":"Go’s std net/http is all you need … right? – Dean Karn – Medium","url":"https://medium.com/@joeybloggs/gos-std-net-http-is-all-you-need-right-1c5555a9f2f6"},{"title":"What “accept interfaces, return structs” means in Go","url":"https://medium.com/@cep21/what-accept-interfaces-return-structs-means-in-go-2fe879e25ee8"},{"title":"How to Use Go Interfaces","url":"https://blog.chewxy.com/2018/03/18/golang-interfaces/"},{"title":"Golang: interface{}, type assertions and type switches","url":"https://newfivefour.com/golang-interface-type-assertions-switch.html"},{"title":"Pitfalls of context values and how to avoid or mitigate them in Go","url":"https://www.calhoun.io/pitfalls-of-context-values-and-how-to-avoid-or-mitigate-them/"},{"title":"Structuring Applications for Growth","url":"https://go-talks.appspot.com/github.com/gophercon/2016-talks/BenJohnson-StructuringApplicationsForGrowth/main.slide"},{"title":"How to ship production-grade Go - O'Reilly Media","url":"https://www.oreilly.com/ideas/how-to-ship-production-grade-go"},{"title":"Loose Coupling in Go lang | 8th Light","url":"https://8thlight.com/blog/javier-saldana/2015/02/06/loose-coupling-in-go-lang.html"},{"title":"Self-referential functions and the design of options","url":"https://commandcenter.blogspot.co.nz/2014/01/self-referential-functions-and-design.html"},{"title":"Functional Options for Friendly APIs","url":"https://dave.cheney.net/2014/10/17/functional-options-for-friendly-apis"},{"title":"Object Oriented Inheritance in Go","url":"http://hackthology.com/object-oriented-inheritance-in-go.html"},{"title":"Concurrency Patterns: Golang","url":"https://medium.com/@thejasbabu/concurrency-patterns-golang-5c5e1bcd0833"},{"title":"Stopping goroutines #golang","url":"https://medium.com/@matryer/stopping-goroutines-golang-1bf28799c1cb"},{"title":"Ways to limit concurrent resource use - Pocket Gophers","url":"https://pocketgophers.com/limit-concurrent-use/"},{"title":"Make Ctrl+C cancel the context.Context – Mat Ryer – Medium","url":"https://medium.com/@matryer/make-ctrl-c-cancel-the-context-context-bd006a8ad6ff"},{"title":"Cancelling Multiple Goroutines","url":"https://chilts.org/2017/06/12/cancelling-multiple-goroutines"},{"title":"How to correctly use context.Context in Go 1.7 – Medium","url":"https://medium.com/@cep21/how-to-correctly-use-context-context-in-go-1-7-8f2c0fafdf39#.bdz5qnna7"},{"title":"Using contexts to avoid leaking goroutines · go bits","url":"https://rakyll.org/leakingctx/"},{"title":"Go Concurrency Patterns: Pipelines and cancellation - The Go Blog","url":"https://blog.golang.org/pipelines"},{"title":"Tutorial: Synchronizing State with Mutexes in Go","url":"https://kylewbanks.com/blog/tutorial-synchronizing-state-with-mutexes-golang"},{"title":"Context","url":"https://peter.bourgon.org/blog/2016/07/11/context.html"},{"title":"Context and Cancellation of goroutines - http://dahernan.github.io","url":"http://dahernan.github.io/2015/02/04/context-and-cancellation-of-goroutines/"},{"title":"Dancing with Go's Mutexes","url":"https://hackernoon.com/dancing-with-go-s-mutexes-92407ae927bf"},{"title":"GoRoutines, Channels, and Proper Exits - Rabarar's Blog","url":"http://rabarar.github.io/blog/2015/02/17/goroutines-channels/"},{"title":"Buffered channels in Go: Tips & Tricks","url":"https://www.rapidloop.com/blog/golang-channels-tips-tricks.html"},{"title":"Use sync.WaitGroup in Golang | Nan Xiao's Blog","url":"http://nanxiao.me/en/use-sync-waitgroup-in-golang/"},{"title":"How to Block Forever in Go","url":"http://blog.sgmansfield.com/2016/06/how-to-block-forever-in-go/"},{"title":"Mutex Profile","url":"https://rakyll.org/mutexprofile/"},{"title":"Sane Concurrency with Go | Mozilla Services","url":"https://blog.mozilla.org/services/2014/03/12/sane-concurrency-with-go/"},{"title":"Goroutine Tracing","url":"https://deferpanic.com/blog/goroutine-tracing/"},{"title":"Error handling patterns in Go","url":"https://mijailovic.net/2017/05/09/error-handling-patterns-in-go/"},{"title":"Testing Web Apps in Go | Mark J. Berger","url":"http://markjberger.com/testing-web-apps-in-golang/"},{"title":"An Introduction to Testing in Go | TutorialEdge.net","url":"https://tutorialedge.net/golang/intro-testing-in-go/"},{"title":"5 simple tips and tricks for writing unit tests in #golang","url":"https://medium.com/@matryer/5-simple-tips-and-tricks-for-writing-unit-tests-in-golang-619653f90742"},{"title":"5 Advanced Testing Techniques in Go · Segment Blog","url":"https://segment.com/blog/5-advanced-testing-techniques-in-go/"},{"title":"The Cult of Go Test","url":"http://danmux.com/posts/the_cult_of_go_test/"},{"title":"Interfaces and Composition for Effective Unit Testing in Golang","url":"https://nathanleclaire.com/blog/2015/10/10/interfaces-and-composition-for-effective-unit-testing-in-golang/"},{"title":"Go Testing Technique: Testing JSON HTTP Requests — Medium","url":"https://medium.com/@xoen/go-testing-technique-testing-json-http-requests-76d9ce0e11f#.95p1r8n16"},{"title":"Acceptance Testing Go Web Applications with Cookies","url":"http://www.meetspaceapp.com/2016/05/16/acceptance-testing-go-webapps-with-cookies.html"},{"title":"Testing Your (HTTP) Handlers in Go","url":"http://blog.questionable.services/article/testing-http-handlers-go/"},{"title":"Testing concurrent code in Golang - JS Blog","url":"https://www.jernejsila.com/2016/07/19/testing-concurrent-code-golang/"},{"title":"Learn Go with tests","url":"https://github.com/quii/learn-go-with-tests"},{"title":"Unit Testing Golang HTTP Middleware","url":"https://medium.com/@PurdonKyle/unit-testing-golang-http-middleware-c7727ca896ea"},{"title":"Lesser-Known Features of Go Test - Blog | Splice","url":"https://splice.com/blog/lesser-known-features-go-test/"},{"title":"Exposing Go on the Internet","url":"https://blog.gopheracademy.com/advent-2016/exposing-go-on-the-internet/"},{"title":"The complete guide to Go net/http timeouts","url":"https://blog.cloudflare.com/the-complete-guide-to-golang-net-http-timeouts/"},{"title":"HTTP(S) Proxy in Golang in less than 100 lines of code","url":"https://medium.com/@mlowicki/http-s-proxy-in-golang-in-less-than-100-lines-of-code-6a51c2f2c38c"},{"title":"Write a Kubernetes-ready service from zero step-by-step GopherAcademy","url":"https://blog.gopheracademy.com/advent-2017/kubernetes-ready-service/"},{"title":"How to not use an http-router in go","url":"https://blog.merovius.de/2017/06/18/how-not-to-use-an-http-router.html"},{"title":"How To Write Router Tests in Go — Tapjoy Engineering","url":"http://eng.tapjoy.com/blog-list/how-to-write-router-tests-in-go"},{"title":"A brief intro of TCP keep-alive in Go’s HTTP implementation | Nan Xiao's Blog","url":"http://nanxiao.me/en/a-brief-intro-of-tcp-keep-alive-in-gos-http-implementation/"},{"title":"Build a Web Crawler in Go","url":"https://jackcanty.com/build-a-web-crawler-in-go.html"},{"title":"Your pprof is showing: IPv4 scans reveal exposed net/http/pprof endpoints:","url":"http://mmcloughlin.com/posts/your-pprof-is-showing"},{"title":"HTTP Request Contexts & Go · go, web, go","url":"http://blog.questionable.services/article/map-string-interface/"},{"title":"Using Object-Oriented Web Servers in Go - via @codeship | via @codeship","url":"https://blog.codeship.com/using-object-oriented-web-servers-go/"},{"title":"Handle HTTP Request Errors in Go @ Alex Pliautau's Blog","url":"http://pliutau.com/handle-http-request-errors-in-go/"},{"title":"Go json.Decoder Considered Harmful","url":"https://ahmet.im/blog/golang-json-decoder-pitfalls/"},{"title":"Building High Performance APIs In Go Using gRPC And Protocol Buffers","url":"https://medium.com/@shijuvar/building-high-performance-apis-in-go-using-grpc-and-protocol-buffers-2eda5b80771b"},{"title":"Implementing UDP vs TCP in Golang - Mina Andrawos","url":"http://www.minaandrawos.com/2016/05/14/udp-vs-tcp-in-golang/"},{"title":"Don't use Go's default HTTP client (in production)","url":"https://medium.com/@nate510/don-t-use-go-s-default-http-client-4804cb19f779"},{"title":"Writing an API Client in Go GopherAcademy","url":"https://blog.gopheracademy.com/advent-2016/http-client/"},{"title":"Seeking around in an HTTP object GopherAcademy","url":"https://blog.gopheracademy.com/advent-2017/seekable-http/"},{"title":"Using Functions Inside Go Templates - Calhoun.io","url":"https://www.calhoun.io/intro-to-templates-p3-functions/"},{"title":"Writing a Data Mapper in Go without an ORM","url":"http://www.meetspaceapp.com/2016/05/23/writing-a-data-mapper-in-go-without-an-orm.html"},{"title":"Practical Persistence in Go: Organising Database Access","url":"http://www.alexedwards.net/blog/organising-database-access"},{"title":"Go tooling essentials · Go, the unwritten parts","url":"https://rakyll.org/go-tool-flags/"},{"title":"Profiling Go Programs - The Go Blog","url":"https://blog.golang.org/profiling-go-programs"},{"title":"Go Tooling in Action — Google Cloud Platform — Community — Medium","url":"https://medium.com/google-cloud/go-tooling-in-action-eca6882ff3bc#.d9ob4wyj4"},{"title":"Using Go as a scripting language in Linux","url":"https://blog.cloudflare.com/using-go-as-a-scripting-language-in-linux/"},{"title":"10 things you (probably) don't know about Go","url":"https://talks.golang.org/2012/10things.slide"},{"title":"Gopher Puzzlers","url":"https://talks.godoc.org/github.com/davecheney/presentations/gopher-puzzlers.slide"},{"title":"Go gotcha: newbie or ninja?","url":"http://yourbasic.org/golang/gotcha/"},{"title":"Advanced Go Tips And Tricks | Tit Petrič","url":"https://scene-si.org/2016/06/13/advanced-go-tips-and-tricks/"},{"title":"Golang slices gotcha · allegro.tech","url":"https://allegro.tech/2017/07/golang-slices-gotcha.html"},{"title":"Diagnostics - The Go Programming Language","url":"https://golang.org/doc/diagnostics.html"},{"title":"Profiling Go","url":"http://www.integralist.co.uk/posts/profiling-go/"},{"title":"Understanding Go Lang Memory Usage","url":"https://deferpanic.com/blog/understanding-golang-memory-usage/"},{"title":"Five things that make Go fast","url":"https://dave.cheney.net/2014/06/07/five-things-that-make-go-fast"},{"title":"Logging, interfaces, and allocation · Don't Panic","url":"http://commaok.xyz/post/interface-allocs/"},{"title":"Practical Go Benchmarks","url":"https://stackimpact.com/blog/practical-golang-benchmarks/"},{"title":"Golang: pass by pointer vs pass by value","url":"http://goinbigdata.com/golang-pass-by-pointer-vs-pass-by-value/"},{"title":"There is no pass-by-reference in Go | Dave Cheney","url":"https://dave.cheney.net/2017/04/29/there-is-no-pass-by-reference-in-go"},{"title":"Variadic functions in Go","url":"https://medium.com/golangspec/variadic-functions-in-go-13c33182b851"},{"title":"Crossing Streams: a Love Letter to io.Reader","url":"http://jmoiron.net/blog/crossing-streams-a-love-letter-to-ioreader/"},{"title":"Function Types in Go (golang)","url":"http://jordanorelli.com/post/42369331748/function-types-in-go-golang"},{"title":"research!rsc: Go Data Structures","url":"https://research.swtch.com/godata"},{"title":"Always Be Closing","url":"https://medium.com/square-corner-blog/always-be-closing-3d5fda0e00da"},{"title":"Don't defer Close() on writable files","url":"https://joeshaw.org/dont-defer-close-on-writable-files/"},{"title":"Examples For Using io.Pipe in Go - zupzup","url":"https://zupzup.org/io-pipe-go/"},{"title":"How to Use go:generate","url":"https://blog.carlmjohnson.net/post/2016-11-27-how-to-use-go-generate/"},{"title":"Writing worker queues, in Go","url":"http://nesv.github.io/golang/2014/02/25/worker-queues-in-go.html"},{"title":"Job Queues in Go - OpsDash","url":"https://www.opsdash.com/blog/job-queues-in-go.html"},{"title":"Working with Files in Go | DevDungeon","url":"https://www.devdungeon.com/content/working-files-go"},{"title":"Reading files in Go — an overview","url":"http://kgrz.io/reading-files-in-go-an-overview.html"},{"title":"Golang: Working with Gzip and Tar","url":"http://blog.ralch.com/tutorial/golang-working-with-tar-and-gzip/"},{"title":"Go Walkthrough: bytes + strings packages","url":"https://medium.com/@benbjohnson/go-walkthrough-bytes-strings-packages-499be9f4b5bd"},{"title":"Go's work-stealing scheduler · Go, the unwritten parts","url":"https://rakyll.org/scheduler/"},{"title":"The Go scheduler - Morsing's blog","url":"http://morsmachine.dk/go-scheduler"},{"title":"Go Assembly by Example","url":"http://davidwong.fr/goasm/"},{"title":"Address Alignments in Go","url":"http://www.tapirgames.com/blog/golang-memory-alignment"},{"title":"Hacking the Scheduler","url":"https://github.com/golang/go/blob/master/src/runtime/HACKING.md"},{"title":"The Go netpoller - Morsing's blog","url":"https://morsmachine.dk/netpoller"},{"title":"Anatomy of a function call in Go","url":"https://syslog.ravelin.com/anatomy-of-a-function-call-in-go-f6fc81b80ecc"},{"title":"Scalable Go Scheduler Design Doc","url":"https://docs.google.com/document/d/1TTj4T2JO42uD5ID9e89oa0sLKhJYD0Y_kqxDv3I3XMw/edit"},{"title":"Scheduler Tracing in Go","url":"https://www.ardanlabs.com/blog/2015/02/scheduler-tracing-in-go.html"},{"title":"Manual Memory Management in Go","url":"https://deferpanic.com/blog/manual-memory-management-in-go/"},{"title":"unsafe.Pointer and system calls GopherAcademy","url":"https://blog.gopheracademy.com/advent-2017/unsafe-pointer-and-system-calls/"},{"title":"Looking at your program’s structure in Go 1.7 · Paul Smith","url":"https://pauladamsmith.com/blog/2016/08/go-1.7-ssa.html"},{"title":"Managing Syscall Overhead with crypto/rand · Scott Mansfield","url":"http://blog.sgmansfield.com/2016/06/managing-syscall-overhead-with-crypto-rand/"},{"title":"Optimized abs() for int64 in Go","url":"http://cavaliercoder.com/blog/optimized-abs-for-int64-in-go.html"},{"title":"Allocation Efficiency in High-Performance Go Services","url":"https://segment.com/blog/allocation-efficiency-in-high-performance-go-services/?utm_source=golangweekly&utm_medium=email"},{"title":"Handling 1 Million Requests per Minute with Go","url":"http://marcio.io/2015/07/handling-1-million-requests-per-minute-with-golang/"},{"title":"allegro.tech - Writing a very fast cache service with millions of entries in Go","url":"https://allegro.tech/2016/03/writing-fast-cache-service-in-go.html"},{"title":"A Million WebSockets and Go – freeCodeCamp","url":"https://medium.freecodecamp.org/million-websockets-and-go-cc58418460bb"},{"title":"go-perfbook","url":"https://github.com/dgryski/go-perfbook"},{"title":"Allocation Efficiency in High-Performance Go Services · Segment Blog","url":"https://segment.com/blog/allocation-efficiency-in-high-performance-go-services/"},{"title":"Golang's Real-time GC in Theory and Practice - Pusher Blog","url":"https://making.pusher.com/golangs-real-time-gc-in-theory-and-practice/"},{"title":"How to Optimize Garbage Collection in Go | Cockroach Labs","url":"https://www.cockroachlabs.com/blog/how-to-optimize-garbage-collection-in-go/"},{"title":"Debugging a potential deadlock in Go","url":"https://wavded.com/post/golang-deadlockish/"},{"title":"Advanced Go Concurrency Patterns - The Go Blog","url":"https://blog.golang.org/advanced-go-concurrency-patterns"},{"title":"Multiplexing Golang Channels to Maximize Throughput | The MongoDB Engineering Journal","url":"https://engineering.mongodb.com/post/multiplexing-golang-channels-to-maximize-throughput/"},{"title":"Golang lock-free values with atomic.Value","url":"https://texlution.com/post/golang-lock-free-values-with-atomic-value/"},{"title":"Stateful locks in Go - Tit Petric","url":"https://scene-si.org/2016/10/12/stateful-locks-in-go/"},{"title":"Share Memory by Communicating","url":"https://blog.golang.org/share-memory-by-communicating"},{"title":"Concurrency is not parallelism","url":"https://blog.golang.org/concurrency-is-not-parallelism"},{"title":"Go Concurrency Patterns: Context","url":"https://blog.golang.org/context"},{"title":"Go Concurrency Patterns: Timing out, moving on","url":"https://blog.golang.org/go-concurrency-patterns-timing-out-and"},{"title":"Concurrency, Goroutines and GOMAXPROCS","url":"https://www.ardanlabs.com/blog/2014/01/concurrency-goroutines-and-gomaxprocs.html"},{"title":"Locking in crypto/rand","url":"http://blog.sgmansfield.com/2016/01/locking-in-crypto-rand/"},{"title":"Text normalization in Go - The Go Blog","url":"https://blog.golang.org/normalization"},{"title":"TechnoSophos: Go Quickly - Converting Character Encodings In Golang","url":"http://technosophos.com/2016/03/09/go-quickly-converting-character-encodings.html"},{"title":"Advanced Encoding and Decoding Techniques","url":"https://blog.gopheracademy.com/advent-2016/advanced-encoding-decoding/"},{"title":"Custom JSON Marshalling in Go · Choly's Blog","url":"http://choly.ca/post/go-json-marshalling/"},{"title":"Mutable strings in Golang – Koki – Medium","url":"https://medium.com/kokster/mutable-strings-in-golang-298d422d01bc"},{"title":"Minimal Perfect Hash Functions","url":"https://blog.gopheracademy.com/advent-2017/mphf/"},{"title":"Go Experience Report for Generics: Google metrics API","url":"https://medium.com/@sameer_74231/go-experience-report-for-generics-google-metrics-api-b019d597aaa4"},{"title":"go-internals","url":"https://github.com/teh-cmc/go-internals"},{"title":"go-fuzz github.com/arolek/ase - Damian Gryski","url":"https://medium.com/@dgryski/go-fuzz-github-com-arolek-ase-3c74d5a3150c"}]
}
